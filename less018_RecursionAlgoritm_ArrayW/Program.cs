// Урок4. Тема: Рекурсия и двумерные массивы

// Двумерный массив_строковый
string[,] table = new string[2, 5]; // 2 строки и 5 столбцов
// String.Empty - Инициализация строк происходит этой константой 
// table[0,0]  table[0,1]  table[0,2]  table[0,3]  table[0,4]
// table[1,0]  table[1,1]  table[1,2]  table[1,3]  table[1,4]

table[1, 2] = "слово";

for (int rows = 0; rows < 2; rows++)
{
    for (int columns = 0; columns < 5; columns++)
    {
        Console.WriteLine($"-{table[rows, columns]}-");
    }

}
Console.WriteLine();


//Метод.Печать массива_числовой
void PrintArray(int[,] matr)
{
    for (int i = 0; i < matr.GetLength(0); i++) // GetLength(0) - возвращает к-во строк массива
    {
        for (int j = 0; j < matr.GetLength(1); j++) // GetLength(1) - возвращает к-во столбцов массива
        {
            Console.Write($"{matr[i, j]} ");
        }
        Console.WriteLine();
    }
}
//Метод.Заполнение массива
void FillArray(int[,] matr)
{
    for (int i = 0; i < matr.GetLength(0); i++) 
    {
        for (int j = 0; j < matr.GetLength(1); j++) 
        {
            matr[i, j] = new Random().Next(1,10);
        }
    }
}


int[,] matrix = new int[3, 4]; // 3 строки и 4 столбца
PrintArray(matrix);            //распечатаем //по умолчанию заполнен нулями 
Console.WriteLine();

FillArray(matrix);             //заполняем случайными числами от 1 до 9
PrintArray(matrix);            //распечатаем 

//**************************************************************************************//
//   Закрашивание области
//**************************************************************************************//

int[,] pic = new int[,]
{
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
    {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},
    {0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0},
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};

//в этом методе уберем нули -> вместо них пробел, а вместо 1 будет + 
void PrintImage(int[,] image)
{
    for (int i = 0; i < image.GetLength(0); i++) 
    {
        for (int j = 0; j < image.GetLength(1); j++) 
        {
            if (image[i,j] == 0) Console.Write($" ");
            else Console.Write($"+");
        }
        Console.WriteLine();
    }
}

PrintImage(pic);
Console.WriteLine();

void FillImage(int row, int col) //Закрашивание фигуры
{            //row,col - нач.точка (откуда начинать закрашивание внутри изображения)
    if (pic[row,col] == 0)
    {
        pic[row,col] = 1;
        FillImage(row-1,col); //Вызов самой себя - рекурсия -> вверху на строку выше
        FillImage(row,col-1); //влево
        FillImage(row+1,col); //вниз
        FillImage(row,col+1); //вправо
    }
}

FillImage(6,11); 
PrintImage(pic);

//**************************************************************************************//
//   Факториал
//**************************************************************************************//
double Factorial(int n)  //ставим тип double во избежание переполнения типа данных
{
    //1! = 1
    //0! = 1
    if (n == 1) return 1;
    else return n * Factorial(n-1);
}
Console.WriteLine($"{Factorial(5)}");

//можем проверить значения циклом
for (int i = 1; i < 25; i++)
{
    Console.WriteLine($"{i}! = {Factorial(i)}");
 
}
    
//**************************************************************************************//
//   Последовательность Фибоначчи
//   Формула: f(n) = f(n-1)+f(n-2)  
//**************************************************************************************//
double Fibonacci(int n)
{
    if (n == 1 || n == 2) return 1;
    else return Fibonacci(n - 1) + Fibonacci(n - 2);
}

for (int i = 1; i < 40; i++)
{
    Console.WriteLine($"f({i}) = {Fibonacci(i)}");
}